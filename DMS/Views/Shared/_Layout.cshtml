@using Microsoft.AspNetCore.Identity
@using DMS.Data
@inject UserManager<Users> UserManager

@inject SignInManager<Users> signInManager;
@inject Microsoft.AspNetCore.Identity.UserManager<Users> UserManager
@inject Microsoft.AspNetCore.Identity.SignInManager<Users> SignInManager
@inject DMS.Data.ApplicationDbContext _db

@* 
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> signInManager;
@inject Microsoft.AspNetCore.Identity.UserManager<ApplicationUser> UserManager
@inject Microsoft.AspNetCore.Identity.SignInManager<ApplicationUser> SignInManager
@inject Guardian_Health_Care.Data.ApplicationDBContext _db *@
<!DOCTYPE html>
<!-- =========================================================
* Sneat - Bootstrap 5 HTML Admin Template - Pro | v1.0.0
==============================================================

* Product Page: https://themeselection.com/item/sneat-bootstrap-html-admin-template/
* Created by: ThemeSelection
* License: You must have a valid license purchased in order to legally use the theme for your project.
* Copyright ThemeSelection (https://themeselection.com)

=========================================================
-->
<!-- beautify ignore:start -->

<html lang="en" class="light-style layout-navbar-fixed layout-menu-fixed " dir="ltr" data-theme="theme-default" data-assets-path="../../assets/" data-template="vertical-menu-template">


<!-- Mirrored from demos.themeselection.com/sneat-bootstrap-html-admin-template/html/vertical-menu-template/index.html by HTTrack Website Copier/3.x [XR&CO'2014], Thu, 18 May 2023 06:35:22 GMT -->
<head>
    <style>
        #toast-container > .toast-success {
            background-color: darkblue; /* Custom green */
            color: #ffffff; /* White text */
        }

        #toast-container > .toast-error {
            background-color: #dc3545; /* Custom red */
            color: #ffffff;
        }

        #toast-container > .toast-info {
            background-color: #17a2b8; /* Custom blue */
            color: #ffffff;
        }

        #toast-container > .toast-warning {
            background-color: #ffc107; /* Custom yellow */
            color: #212529;
        }

    </style>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="icon" type="image/x-icon" href="~/Images/logo.png" />
    <!-- For PNG favicon -->
    <!-- <link rel="icon" type="image/png" href="~/assets/favicon.png" /> -->

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0" />

    @* <title> @ViewData["Title"]</title> *@

    <meta name="description" content="Most Powerful &amp; Comprehensive Bootstrap 5 HTML Admin Dashboard Template built for developers!" />
    <meta name="keywords" content="dashboard, bootstrap 5 dashboard, bootstrap 5 design, bootstrap 5">
    <!-- Google Tag Manager (Default ThemeSelection: GTM-5DDHKGP, PixInvent: GTM-5J3LMKC) -->

    <link rel="stylesheet" href="~/assets/vendor/libs/flatpickr/flatpickr.css" />
    @*  <!-- Row Group CSS -->
    <link rel="stylesheet" href="~/assets/vendor/libs/datatables-rowgroup-bs5/rowgroup.bootstrap5.css">
    *@ <!-- Form Validation -->
    <link rel="stylesheet" href="~/assets/vendor/libs/formvalidation/dist/css/formValidation.min.css" />
    <!-- Icons -->
    <!-- Icons -->
    <!-- Icons -->
    <link rel="stylesheet" href="~/assets/vendor/fonts/boxicons.css" />
    <link rel="stylesheet" href="~/assets/vendor/fonts/fontawesome.css" />
    <link rel="stylesheet" href="~/assets/vendor/fonts/flag-icons.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />

    <!-- Core CSS -->
    <link rel="stylesheet" href="~/assets/vendor/css/rtl/core.css" class="template-customizer-core-css" />
    <link rel="stylesheet" href="~/assets/vendor/css/rtl/theme-default.css" class="template-customizer-theme-css" />
    <link rel="stylesheet" href="~/assets/css/demo.css" />
    <!-- DataTables CSS -->
    <!-- Vendors CSS -->
    <link rel="stylesheet" href="~/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css" />
    <link rel="stylesheet" href="~/assets/vendor/libs/typeahead-js/typeahead.css" />
    <link rel="stylesheet" href="~/assets/vendor/libs/apex-charts/apex-charts.css" />
    <!-- Add FontAwesome for Icons -->

    <link href="~/assets/css/demo - copy - copy.css" rel="stylesheet" />
    <link href="~/assets/css/toastr.min.css" rel="stylesheet" />
    <!-- SweetAlert -->
    <script src="~/sweetalert2/sweetalert2@11.js"></script>
    <!-- Helpers -->
    <script src="~/assets/vendor/js/helpers.js"></script>
    <link href="~/assets/css/demo - copy.css" rel="stylesheet" />
    @* <script src="~/assets/css/loadingoverlay.min.js"></script> *@

    <!-- Swiper.js CDN -->
    <script src="~/assets/js/swiper-bundle.min-2.js"></script>
    <link href="~/assets/css/swiper-bundle.min.css" rel="stylesheet" />
    <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->
    <script src="~/assets/js/config.js"></script>

    @RenderSection("Styles", required: false)
</head>

<body style="background-color:  #f0f5f5">

    @{
        var user = await UserManager.GetUserAsync(User);
        // var fullName = $"{user?.FirstName} {user?.LastName}";
        var fullName = user?.Name;
    }

    <!-- Layout wrapper -->
    <div class="layout-wrapper layout-content-navbar  ">
        <div class="layout-container">
            <!-- Menu -->

            <aside id="layout-menu" class="layout-menu menu-vertical menu bg-menu-theme">


                <div class="app-brand demo closed">


                    <a class="app-brand-link">
                        <img id="logoImage" class="img-fluid" src="~/Images/logo-removebg.png"
                             style="max-width:180px;max-height:80px;margin-left:0px;" />
                    </a>

                    <a href="javascript:void(0);" class="layout-menu-toggle menu-link text-large ms-auto" id="menuToggle">
                        <i class="bx bx-chevron-left bx-sm align-middle"></i>
                    </a>

                </div>
                <div class="menu-inner-shadow"></div>
                <ul class="menu-inner py-1">
                    <!-- Dashboard  -->
                    <li class="menu-item " id="dashboard">
                        <a href="@Url.Action("Index","Home")" class="menu-link ">
                            <i class="menu-icon tf-icons bx bxs-home"></i>
                            <div data-i18n="Dashboards">Dashboard</div>
                        </a>
                        @*  <ul class="menu-sub">
                            <li class="menu-item" id="btnIndex">
                                <a  class="menu-link">
                                    <div data-i18n="Analytics">Dashboard</div>
                                </a>
                            </li>
                        </ul> *@

                    </li>
                    @if (SignInManager.IsSignedIn(User))
                    {
                        var users = await UserManager.GetUserAsync(User);
                        var userRole = (await UserManager.GetRolesAsync(users)).FirstOrDefault();

                        var rolePermissions = _db.RolePermissions.Where(rp => rp.Role.Name == userRole).ToList();

                        // Check permission for User Management
                        // var userPermission = rolePermissions.FirstOrDefault(rp => rp.ModelloName == "User");
                        @*  var userPermission = rolePermissions.FirstOrDefault(rp => rp.ModelloName.Split(',').Contains("User"));
                        if (userPermission != null || User.IsInRole("SuperAdmin"))
                        {
                            <li class="menu-item " id="User">
                                <a href="@Url.Action("Index","Accounts")" class="menu-link ">
                                    <i class="menu-icon tf-icons bx bxs-user"></i>
                                    <div data-i18n="Dashboards">User</div>
                                </a>

                            </li>
                        } *@

                        var paymentPlanPermission = rolePermissions.FirstOrDefault(rp => rp.ModelloName.Split(',').Contains("PaymentPlans"));
                        if (paymentPlanPermission != null || User.IsInRole("SuperAdmin"))
                        {

                            <li class="menu-item " id="btnPaymentPlans">
                                <a href="javascript:void(0);" class="menu-link menu-toggle">
                                    <i class="menu-icon tf-icons bx bxs-plug"></i>
                                    <div data-i18n="Dashboards">Payment Plans</div>
                                </a>
                                <ul class="menu-sub">

                                    <li class="menu-item " id="btnManagePaymentPlans">
                                        <a href="@Url.Action("Index","PaymentPlans")" class="menu-link ">
                                            <i class="menu-icon tf-icons bx bxs-user"></i>
                                            <div data-i18n="Dashboards">Payment Plans</div>
                                        </a>

                                    </li>

                                </ul>

                            </li>
                        }
                        // Check permission for Zip Codes Module
                        var projectPermission = rolePermissions.FirstOrDefault(rp => rp.ModelloName.Split(',').Contains("Projects"));
                        if (projectPermission != null || User.IsInRole("SuperAdmin"))
                        {

                            <li class="menu-item " id="btnProjects">
                                <a href="javascript:void(0);" class="menu-link menu-toggle">
                                    <i class="menu-icon tf-icons bx bx bxs-city"></i>
                                    <div data-i18n="Dashboards">Projects</div>
                                </a>
                                <ul class="menu-sub">

                                    <li class="menu-item " id="btnManageProjects">
                                        <a href="@Url.Action("Index","Project")" class="menu-link">
                                            <i class="menu-icon tf-icons "></i>
                                            <div data-i18n="Dashboards">Project</div>
                                        </a>

                                    </li>

                                </ul>

                            </li>
                        }

                        // Check permission for Language Module
                        var permission = rolePermissions.FirstOrDefault(rp => rp.ModelloName.Split(',').Contains("RolePermisions"));
                        if (User.IsInRole("SuperAdmin"))
                        {

                            <li class="menu-item " id="btnRolePermission">
                                <a href="javascript:void(0);" class="menu-link menu-toggle">
                                    <i class="menu-icon tf-icons bx bxs-paint-roll"></i>
                                    <div data-i18n="Dashboards">Role Permissions</div>
                                </a>
                                <ul class="menu-sub">

                                    <li class="menu-item " id="btnManageRolePermission">
                                        <a href="@Url.Action("Index","RolePermisions")" class="menu-link">
                                            <i class="menu-icon tf-icons "></i>
                                            <div data-i18n="Dashboards">Manage Permission</div>
                                        </a>

                                    </li>
                                    <li class="menu-item " id="btnManageRole">
                                        <a href="@Url.Action("RoleIndex","RolePermisions")" class="menu-link">
                                            <i class="menu-icon tf-icons "></i>
                                            <div data-i18n="Dashboards">Manage Roles</div>
                                        </a>

                                    </li>
                                </ul>

                            </li>
                        }
                        // Check permission for Insurance Module
                        var unitsPermission = rolePermissions.FirstOrDefault(rp => rp.ModelloName.Split(',').Contains("Units"));
                        if (unitsPermission != null || User.IsInRole("SuperAdmin"))
                        {
                            <li class="menu-item " id="btnUnits">
                                <a href="javascript:void(0);" class="menu-link menu-toggle">
                                    <i class="menu-icon tf-icons bx bxs-blanket"></i>
                                    <div data-i18n="Dashboards">Units</div>
                                </a>
                                <ul class="menu-sub">

                                    <li class="menu-item " id="btnManageUnits">
                                        <a href="@Url.Action("Index","Units")" class="menu-link ">
                                            <i class="menu-icon tf-icons "></i>
                                            <div data-i18n="Dashboards">Manage Units</div>
                                        </a>

                                    </li>
                                    <li class="menu-item " id="btnManageType">
                                        <a href="@Url.Action("Index","Units")" class="menu-link ">
                                            <i class="menu-icon tf-icons "></i>
                                            <div data-i18n="Dashboards">Units Type</div>
                                        </a>

                                    </li>
                                </ul>

                            </li>

                        }
                    }

                    @*  // Check permission for Services Module
                        var servicesPermission1 = rolePermissions.FirstOrDefault(rp => rp.ModelloName.Split(',').Contains("Available Services"));
                        if (servicesPermission1 != null || User.IsInRole("Super Admin"))
                        {
                            <li class="menu-item " id="btnServices">
                                <a href="@Url.Action("Index","AvailibleServices")" class="menu-link ">
                                    <i class="menu-icon tf-icons bx bxs-cog"></i>
                                    <div data-i18n="Dashboards">Services</div>
                                </a>

                            </li>
                        }

                        // Check permission for Chart Module
                        var nurseChartPermission = rolePermissions.FirstOrDefault(rp => rp.ModelloName.Split(',').Contains("Nurse Chart"));
                        if (nurseChartPermission != null || User.IsInRole("Super Admin"))
                        {
                            <li class="menu-item " id="btnNurseChart">
                                <a href="javascript:void(0);" class="menu-link menu-toggle">
                                    <i class="menu-icon tf-icons bx bxs-user-detail"></i>
                                    <div data-i18n="Dashboards">Nurses</div>
                                </a>
                                <ul class="menu-sub">

                                    <li class="menu-item " id="manageChart">
                                        <a href="@Url.Action("Index","NurseChat")" class="menu-link">
                                            <div data-i18n="Analytics">Manage Nurse Chart</div>
                                        </a>
                                    </li>

                                </ul>
                                <ul class="menu-sub">

                                    <li class="menu-item " id="manageLeaves">
                                        <a href="@Url.Action("Index","NurseLeaves")" class="menu-link">
                                            <div data-i18n="Analytics">Nurse Vacations</div>
                                        </a>
                                    </li>

                                </ul>
                            </li>
                        }

                        // Check permission for Appoinment Module
                        var appointmentPermission = rolePermissions.FirstOrDefault(rp => rp.ModelloName.Split(',').Contains("Appointments"));
                        if (appointmentPermission != null || User.IsInRole("Super Admin"))
                        {
                            <li class="menu-item " id="btnAppointment">
                                <a href="javascript:void(0);" class="menu-link menu-toggle">
                                    <i class="menu-icon tf-icons bx bx-calendar-check"></i>
                                    <div data-i18n="Dashboards">Appointment</div>
                                </a>
                                <ul class="menu-sub">

                                    <li class="menu-item " id="manageAppointment">
                                        <a href="@Url.Action("AddEditAppointment","Appointments",new {id = 0})" class="menu-link">
                                            <div data-i18n="Analytics">Check Availability</div>
                                        </a>
                                    </li>

                                </ul>
                                <ul class="menu-sub">

                                    <li class="menu-item " id="manageOutput">
                                        <a href="@Url.Action("Index","Appointments")" class="menu-link">
                                            <div data-i18n="Analytics">Output</div>
                                        </a>
                                    </li>

                                </ul>
                            </li>
                        }

                    }
 *@
                </ul>
            </aside>
            <!-- / Menu -->
            <!-- Layout container -->
            <div class="layout-page">
                <!-- Navbar -->
                <nav class="layout-navbar container-xxl navbar navbar-expand-xl navbar-detached align-items-center bg-navbar-theme" id="layout-navbar">

                    <div class="layout-menu-toggle navbar-nav align-items-xl-center me-3 me-xl-0   d-xl-none ">
                        <a class="nav-item nav-link px-0 me-xl-4" href="javascript:void(0)">
                            <i class="bx bx-menu bx-sm"></i>
                        </a>
                    </div>
                    <div class="navbar-nav-right d-flex align-items-center" id="navbar-collapse">



                        <div class="d-flex justify-content-between align-items-center w-100">
                            <h4 style="color:darkblue;margin-bottom:2px;">DMS</h4>
                            @* <partial name="_LoginPartial"></partial> *@
                            <!-- Notification -->
                            @*  <li class="nav-item dropdown-notifications navbar-dropdown dropdown me-3 me-xl-1">
                                <a class="nav-link dropdown-toggle hide-arrow" href="javascript:void(0);" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
                                    <i class="bx bx-bell bx-sm" style="color:#572b18"></i>
                                    <span class="badge bg-danger rounded-pill badge-notifications">0</span>
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end py-0">
                                    <li class="dropdown-menu-header border-bottom">
                                        <div class="dropdown-header d-flex align-items-center py-3">
                                            <h5 class="text-body mb-0 me-auto">Notification</h5>

                                        </div>
                                    </li>
                                    <li class="dropdown-notifications-list scrollable-container overflow-auto">
                                        <ul class="list-group list-group-flush">
                                        </ul>
                                    </li>
                                </ul>
                            </li> *@


                            <!--/OnHold Notification -->
                            @* <li class="nav-item dropdown-notifications navbar-dropdown dropdown me-3 me-xl-1">
                                <a class="nav-link dropdown-toggle hide-arrow" href="javascript:void(0);" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
                                    <i class="fa fa-bullhorn" aria-hidden="true" style="color:#572b18"></i>
                                    <span class="badge bg-danger rounded-pill badge-cancel-notifications">0</span>
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end py-0">
                                    <li class="dropdown-menu-header border-bottom">
                                        <div class="dropdown-header d-flex align-items-center py-3">
                                            <h5 class="text-body mb-0 me-auto">Canceled Orders</h5>
                                            <a href="javascript:void(0)" class="dropdown-notifications-all text-body" data-bs-toggle="tooltip" data-bs-placement="top" title="Mark all as read"><i class="bx fs-4 bx-envelope-open"></i></a>
                                        </div>
                                    </li>
                                    <li class="dropdown-notifications-list scrollable-container overflow-auto">
                                        <ul class="cancel-list-group">
                                            <!-- Canceled notifications will be appended here -->
                                        </ul>
                                    </li>
                                </ul>
                            </li>

 *@                            <!--/ Notification -->
                            <!--/ User -->
                            <li class="nav-item navbar-dropdown dropdown-user dropdown">
                                <a class="nav-link dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                    <div class="avatar avatar-online">
                                        @* <img src="~/Images/@user.ProfilePicture" alt class="w-px-40 h-auto rounded-circle"> *@
                                        <img src="@(string.IsNullOrEmpty(user?.ProfilePicture) ? "/Images/logo-removebg.png" : Url.Content($"~/Images/{user.ProfilePicture}"))" alt="Profile Picture" class="w-px-40 h-auto rounded-circle">

                                    </div>
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li>
                                        <ul class="dropdown-item" href="pages-account-settings-account.html">
                                            <div class="d-flex">
                                                <div class="flex-shrink-0 me-3">
                                                    <div class="avatar avatar-online">
                                                        @* <img src="~/Images/@user.ProfilePicture" class="w-px-40 h-auto rounded-circle"> *@
                                                        <img src="@(string.IsNullOrEmpty(user?.ProfilePicture) ? "/Images/logo-removebg.png" : Url.Content($"~/Images/{user.ProfilePicture}"))"
                                                             alt="Profile Picture" class="w-px-40 h-auto rounded-circle">
                                                    </div>
                                                </div>
                                                <div class="flex-grow-1">
                                                    <span class="fw-semibold d-block">@fullName</span>

                                                    <small class="text-muted">
                                                        @foreach (var role in await UserManager.GetRolesAsync(await UserManager.GetUserAsync(User)))
                                                        {
                                                            @role
                                                        }
                                                    </small>
                                                </div>
                                            </div>
                                        </ul>
                                    </li>
                                    <li>
                                        <div class="dropdown-divider"></div>
                                    </li>

                                    <li>
                                        <a class="dropdown-item">
                                            <i class="bx bx-user me-2"></i>
                                            <span class="align-middle">My Profile</span>
                                        </a>
                                    </li>

                                    <li>
                                        <a class="dropdown-item" href="/Identity/Account/ChangePassword">
                                            <i class="bx bx-cog me-2"></i>
                                            <span class="align-middle">Change Password</span>
                                        </a>
                                    </li>

                                    <li>
                                        <a class="dropdown-item" target="_blank">
                                            @{
                                                if (User.Identity?.IsAuthenticated ?? false)
                                                {
                                                    <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
                                                        <i class="bx bx-power-off me-2">
                                                        </i>
                                                        <button type="submit" class="nav-link btn btn-link text-dark">Log Out</button>
                                                    </form>
                                                }
                                                else
                                                {
                                                    <p>You have successfully logged out of the application.</p>
                                                }
                                            }

                                        </a>
                                    </li>
                                </ul>
                            </li>
                            </ul>
                        </div>
                        <!-- Search Small Screens -->
                        <div class="navbar-search-wrapper search-input-wrapper  d-none">
                            <input type="text" class="form-control search-input container-xxl border-0" placeholder="Search..." aria-label="Search...">
                            <i class="bx bx-x bx-sm search-toggler cursor-pointer"></i>
                        </div>
                    </div>
                </nav>
                <!-- / Navbar -->
                @RenderBody()
                <!-- Footer -->
                <div class="content-wrapper">
                    <!-- Content -->
                    <div class="container-xxl flex-grow-1 container-p-y" style="height:0px;margin-bottom:0px;">
                        <div class="" style="font-size:12px;background-color:white !important;border-radius:7px;">

                            <footer class="content-footer footer bg-footer-theme" style="background-color:white !important;;border-radius:7px;">
                                <div class="container-xxl d-flex flex-wrap justify-content-center py-2 flex-md-row flex-column " style="text-align:center">

                                    <div class="mb-2 mb-md-0">
                                        Copyright ©
                                        <script>
                                            document.write(new Date().getFullYear())
                                        </script>
                                        DMS.Developed by <a style="color:darkblue" @* href="https://agiletechstudio.com/" *@  target="_blank"> DMS</a> All rights reserved.

                                    </div>
                                </div>
                            </footer>
                        </div>
                    </div>
                </div>

                <!-- / Footer -->
            </div>
            <!-- / Layout page -->
        </div>



        <!-- Overlay -->
        <div class="layout-overlay layout-menu-toggle"></div>


        <!-- Drag Target Area To SlideIn Menu On Small Screens -->
        <div class="drag-target"></div>

    </div>
    <!-- / Layout wrapper -->
    <!-- Core JS -->
    @* <script src="~/assets/css/loadingoverlay.min.js"></script> *@

    <!-- build:js assets/vendor/js/core.js -->
    <script src="~/assets/vendor/libs/jquery/jquery.js"></script>
    <script src="~/assets/vendor/libs/popper/popper.js"></script>
    <script src="~/assets/vendor/js/bootstrap.js"></script>
    <script src="~/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js"></script>

    <script src="~/assets/vendor/libs/hammer/hammer.js"></script>
    <script src="~/assets/vendor/libs/i18n/i18n.js"></script>
    <script src="~/assets/vendor/libs/typeahead-js/typeahead.js"></script>

    <script src="~/assets/vendor/js/menu.js"></script>
    <!-- Flat Picker -->
    <script src="~/assets/vendor/libs/moment/moment.js"></script>
    <script src="~/assets/vendor/libs/flatpickr/flatpickr.js"></script>
    <!-- endbuild -->
    <!-- Form Validation -->
    <script src="~/assets/vendor/libs/formvalidation/dist/js/FormValidation.min.js"></script>
    <script src="~/assets/vendor/libs/formvalidation/dist/js/plugins/Bootstrap5.min.js"></script>
    <script src="~/assets/vendor/libs/formvalidation/dist/js/plugins/AutoFocus.min.js"></script>

    <!-- Vendors JS -->
    <script src="~/assets/vendor/libs/apex-charts/apexcharts.js"></script>

    <!-- Main JS -->
    <script src="~/assets/js/main.js"></script>

    <!-- DataTables -->
    <script src="~/assets/vendor/jquery-3.6.0.min.js"></script>
    <script src="~/assets/vendor/jquery.datatables.min.js"></script>
    <link href="~/assets/vendor/jquery.datatables.min.css" rel="stylesheet" />
    <script src="~/js/site.js"></script>

    <!-- Select2 DropDown -->
    <script src="~/assets/js/select2.min.js"></script>
    <link href="~/assets/css/select2.min.css" rel="stylesheet" />
    <link href="~/assets/css/select2-bootstrap4.css" rel="stylesheet" />


    <!-- Core JS -->
    <!-- Flat Picker -->
    <script src="~/assets/vendor/libs/moment/moment.js"></script>
    <script src="~/assets/vendor/libs/flatpickr/flatpickr.js"></script>
    <!-- Form Validation -->
    <script src="~/assets/vendor/libs/formvalidation/dist/js/FormValidation.min.js"></script>
    <script src="~/assets/vendor/libs/formvalidation/dist/js/plugins/Bootstrap5.min.js"></script>
    <script src="~/assets/vendor/libs/formvalidation/dist/js/plugins/AutoFocus.min.js"></script>
    <script src="~/assets/css/loadingoverlay.min.js"></script>
    <script src="~/assets/vendor/js/toastr.min.js"></script>
    <!-- SignalR -->
    @* <script src="~/assets/vendor/signalr.min.js"></script> *@
    @*

    @* @await RenderSectionAsync("Scripts", required: false) *@
    @*  @RenderSection("Scripts", false)
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    } *@
    @RenderSection("scripts", false)
    <script>

        $(document).ready(function () {
            $('#menuToggle').on('click', function () {
                const logo = $('#logoImage');
                const sidebar = $('.app-brand');

                if (sidebar.hasClass('closed')) {
                    // Sidebar is currently closed — OPEN it
                    logo.attr('src', '/Images/logo-removebg.png')       // Image when sidebar is open
                        .css({ 'width': '50px', 'height': '50px' }); // Opened size
                    sidebar.removeClass('closed');  // Remove 'closed' class
                    sidebar.css({ 'padding-right': '2rem', 'padding-left': '1rem' }); // Closed padding
                } else {
                    // Sidebar is currently open — CLOSE it
                    logo.attr('src', '/Images/logo-removebg.png')          // Image when sidebar is closed
                        .css({ 'width': '150px', 'height': '50px' }); // Closed size
                    sidebar.addClass('closed');   // Add 'closed' class
                    sidebar.css({ 'padding-right': '2rem', 'padding-left': '2rem' }); // Opened padding
                }
            });
        });

        toastr.options = {
            "closeButton": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
    </script>
    <script src="https://cdn.jsdelivr.net/npm/idle-js@1.2.0/dist/Idle.min.js
"></script>
    <script>

        var idle = new IdleJs({
            idle: 300000, // idle time in ms
            events: ['mousemove', 'keydown', 'mousedown', 'touchstart'], // events that will trigger the idle resetter
            onIdle: function () {
                location.reload();

            },
            onActive: function () {

            }, // callback function to be executed after back form idleness
            onHide: function () {

            }, // callback function to be executed when window become hidden
            onShow: function () {

            }, // callback function to be executed when window become visible
            keepTracking: true, // set it to false if you want to be notified only on the first idleness change
            startAtIdle: false // set it to true if you want to start in the idle state
        });
        idle.start();

    </script>



</body>


</html>



